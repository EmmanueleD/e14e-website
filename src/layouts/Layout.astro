---
import "../styles/tailwind.css";
import {
  getLangFromUrl,
  useTranslations,
  useTranslatedPath,
  getServices,
  languages
} from "../i18n/utils";
import LanguagePicker from "../components/LanguagePicker.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;

// Get current language and translations
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

// Get services in current language
const services = getServices(lang);

// Language prefix for URLs
const langPrefix = lang === "en" ? "" : `/${lang}`;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Emmanuele Durante - Shopify Developer" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Funnel+Display:wght@300..800&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-white">
    <!-- Nastro Work in Progress -->
    <div class="ribbon">
      <span>website work in progress</span>
    </div>
    <nav
      class="fixed top-0 w-full bg-white/80 backdrop-blur-sm z-50 border-b border-gray-200"
    >
      <div class="w-full px-4 py-4 flex justify-between items-center">
        <a
          href={`/${lang !== "en" ? lang : ""}`}
          class="text-xl font-bold text-primary flex items-center gap-2 w-20 h-auto"
        >
          <img
            src="/assets/logo_black.png"
            alt="Emmanuele Durante"
            height="auto"
            class="w-full h-auto"
          />
        </a>
        <div class="hidden md:flex items-center gap-6">
          <div class="relative group">
            <a
              href={`/${lang !== "en" ? lang : ""}/#services`}
              class="text-secondary hover:text-primary transition-colors flex items-center gap-1"
            >
              {t("nav.services")}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M19 9l-7 7-7-7"></path>
              </svg>
            </a>
            <div
              class="absolute left-0 mt-2 w-48 bg-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50"
            >
              <div class="py-2 px-3">
                {
                  services.map(
                    (service: {
                      id: string;
                      title: string;
                      description: string;
                      icon: string;
                      fullDescription: string;
                      titleAccent: string;
                    }) => (
                      <a
                        href={translatePath(`/servizi/${service.id}`)}
                        class="block py-2 px-3 text-sm text-secondary hover:text-primary hover:bg-gray-50 rounded-md"
                      >
                        {service.title} {service.titleAccent}
                      </a>
                    )
                  )
                }
              </div>
            </div>
          </div>

          <!-- Client Projects Link -->
          <a
            href={translatePath("/client-projects")}
            class="text-secondary hover:text-primary transition-colors"
          >
            {t("nav.clientProjects")}
          </a>

          <!-- Contact Link -->
          <a
            href={translatePath("/contact")}
            class="bg-primary text-white px-5 py-2 rounded-lg hover:bg-primary/90 transition-colors"
          >
            {t("nav.contact")}
          </a>

          <!-- Language Toggle -->
          <div
            class="flex items-center ml-4 border rounded-full px-1 py-1 bg-gray-100"
          >
            <LanguagePicker />
          </div>
        </div>

        <!-- Mobile menu button -->
        <button
          class="md:hidden text-secondary hover:text-primary"
          id="mobile-menu-button"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>

      <!-- Mobile menu -->
      <div
        class="md:hidden hidden bg-white border-t border-gray-200"
        id="mobile-menu"
      >
        <div class="w-full px-4 py-3">
          <a class="block py-2 text-secondary hover:text-primary"
            >{t("nav.services")}</a
          >
          <div class="pl-4 py-2">
            <a
              href={translatePath(`/servizi/landingpages`)}
              class="block py-2 text-sm text-secondary hover:text-primary"
              >{lang === "en" ? "Landing Pages" : "Landing Pages"}</a
            >
            <a
              href={translatePath(`/servizi/shopify-dev`)}
              class="block py-2 text-sm text-secondary hover:text-primary"
              >{lang === "en" ? "Shopify Development" : "Desarrollo Shopify"}</a
            >
            <a
              href={translatePath(`/servizi/shopify-training`)}
              class="block py-2 text-sm text-secondary hover:text-primary"
              >{lang === "en" ? "Shopify Training" : "Formaci√≥n Shopify"}</a
            >
            <a
              href={translatePath(`/servizi/webapp`)}
              class="block py-2 text-sm text-secondary hover:text-primary"
              >{lang === "en" ? "Web Applications" : "Aplicaciones Web"}</a
            >
            <a
              href={translatePath(`/servizi/integrations`)}
              class="block py-2 text-sm text-secondary hover:text-primary"
              >{lang === "en" ? "Integrations" : "Integraciones"}</a
            >
            <a
              href={translatePath(`/servizi/ai-automations`)}
              class="block py-2 text-sm text-secondary hover:text-primary"
              >{lang === "en" ? "AI Automations" : "Automatizaciones con IA"}</a
            >
          </div>
          <a
            href={translatePath("/client-projects")}
            class="block py-2 text-secondary hover:text-primary"
            >{t("nav.clientProjects")}</a
          >
          <a
            href={translatePath("/contact")}
            class="block py-2 text-secondary hover:text-primary"
            >{t("nav.contact")}</a
          >

          <!-- Mobile Language Selector -->
          <div class="border-t border-gray-100 mt-4 pt-4">
            <div class="flex gap-4">
              <a
                href={translatePath(Astro.url.pathname, "en")}
                class={`px-3 py-1 rounded-md ${lang === "en" ? "bg-accent/10 text-accent font-bold" : "text-secondary"}`}
              >
                EN
              </a>
              <a
                href={translatePath(Astro.url.pathname, "es")}
                class={`px-3 py-1 rounded-md ${lang === "es" ? "bg-accent/10 text-accent font-bold" : "text-secondary"}`}
              >
                ES
              </a>
            </div>
          </div>
        </div>
      </div>
    </nav>

    <script>
      // Mobile menu toggle
      document.addEventListener("DOMContentLoaded", () => {
        const mobileMenuButton = document.getElementById("mobile-menu-button");
        const mobileMenu = document.getElementById("mobile-menu");

        if (mobileMenuButton && mobileMenu) {
          mobileMenuButton.addEventListener("click", () => {
            mobileMenu.classList.toggle("hidden");
          });
        }
      });
    </script>
    <main class="pt-16 scroll-container">
      <slot />
    </main>
    <section
      class="relative flex flex-col items-end justify-end min-h-screen bg-primary"
    >
      <footer class="section text-white py-8 px-4 text-end">
        <!-- floating in the center of the screen cta to contact -->
        <div
          class="absolute bottom-0 left-1/2 transform -translate-x-1/2 w-full h-full flex items-center justify-center"
        >
          <a
            href={translatePath("/contact")}
            class="inline-block px-12 py-6 bg-white text-primary font-bold rounded-lg text-2xl shadow-xl hover:bg-gray-100 hover:shadow-2xl transition-all transform hover:-translate-y-2 animate-pulse-slow"
          >
            {t("servicePage.ctaButton")}
          </a>
        </div>

        <div class="absolute bottom-0 right-0 transform z-50 p-4">
          <p class="mb-4">
            &copy; {new Date().getFullYear()} e14e. {t("footer.rights")}
          </p>
          <div id="contacts" class="mb-4">
            <a href="mailto:e14e@emmanueledurante.com"
              >e14e@emmanueledurante.com</a
            >
          </div>
          <div class="flex justify-end space-x-4">
            <a
              href={translatePath("/privacy-policy")}
              class="text-white/80 hover:text-white hover:underline"
              >Privacy Policy</a
            >
            <a
              href={translatePath("/cookie-policy")}
              class="text-white/80 hover:text-white hover:underline"
              >Cookie Policy</a
            >
            <a
              href={translatePath("/terms-and-conditions")}
              class="text-white/80 hover:text-white hover:underline"
              >Terms & Conditions</a
            >
          </div>
        </div>
      </footer>
    </section>
  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }

  body {
    font-family: "Funnel Display", sans-serif;
  }

  /* Stile per il nastro diagonale */
  .ribbon {
    position: fixed;
    top: 0;
    right: 0;
    width: 250px;
    height: 250px;
    overflow: hidden;
    z-index: 9999;
    pointer-events: none;
  }

  .ribbon span {
    position: absolute;
    display: block;
    width: 350px;
    padding: 15px 0;
    background-color: #8b4513; /* Marrone */
    color: white;
    font-weight: bold;
    text-align: center;
    text-transform: uppercase;
    font-size: 16px;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
    transform: rotate(45deg);
    right: -70px;
    top: 60px;
  }

  .scroll-container {
    height: 100%;
  }

  section {
    min-height: 100vh;
  }

  /* Applica scroll-snap solo su desktop e disattivalo su mobile */
  @media (min-width: 768px) {
    html {
      scroll-snap-type: y proximity; /* Meno aggressivo di 'mandatory' */
    }

    section {
      scroll-snap-align: start;
      scroll-snap-stop: normal; /* Meno aggressivo di 'always' */
    }
  }

  /* Disabilita esplicitamente lo scroll-snap su mobile */
  @media (max-width: 767px) {
    html {
      scroll-snap-type: none;
    }
  }
</style>
